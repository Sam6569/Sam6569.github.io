name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  docker-build-and-deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/ci-cd-demo:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ci-cd-demo:latest

      # Secure deployment
      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add staging server to known hosts
        run: ssh-keyscan -H YOUR_STAGING_SERVER_IP_OR_DOMAIN >> ~/.ssh/known_hosts

      - name: Deploy to staging server
        run: |
          ssh USERNAME@YOUR_STAGING_SERVER_IP_OR_DOMAIN "
            docker pull ${{ secrets.DOCKER_USERNAME }}/ci-cd-demo:latest &&
            docker stop app || true &&
            docker rm app || true &&
            docker run -d --name app -p 80:3000 ${{ secrets.DOCKER_USERNAME }}/ci-cd-demo:latest
          "
